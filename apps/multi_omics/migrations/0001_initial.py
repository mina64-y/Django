# Generated by Django 4.2.20 on 2025-04-17 05:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('patients', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='MultiOmicsRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('gene_data_ref', models.CharField(blank=True, max_length=1024, verbose_name='Gene Data Ref')),
                ('protein_data_ref', models.CharField(blank=True, max_length=1024, verbose_name='Protein Data Ref')),
                ('methylation_data_ref', models.CharField(blank=True, max_length=1024, verbose_name='Methylation Data Ref')),
                ('cnv_data_ref', models.CharField(blank=True, max_length=1024, verbose_name='CNV Data Ref')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], db_index=True, default='PENDING', max_length=20, verbose_name='Status')),
                ('celery_task_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Celery Task ID')),
                ('request_timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Request Time')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='multi_omics_requests', to='patients.patientprofile', verbose_name='Patient')),
                ('requester', models.ForeignKey(limit_choices_to={'role': 'CLINICIAN'}, on_delete=django.db.models.deletion.PROTECT, related_name='multi_omics_requests', to=settings.AUTH_USER_MODEL, verbose_name='Requesting Clinician')),
            ],
            options={
                'verbose_name': 'Multi-omics Request',
                'verbose_name_plural': 'Multi-omics Requests',
                'ordering': ['-request_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='MultiOmicsResult',
            fields=[
                ('request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='result', serialize=False, to='multi_omics.multiomicsrequest', verbose_name='Multi-omics Request')),
                ('ensemble_probability', models.FloatField(blank=True, null=True, verbose_name='Ensemble Probability')),
                ('ensemble_prediction', models.IntegerField(blank=True, null=True, verbose_name='Ensemble Prediction')),
                ('individual_probabilities', models.JSONField(blank=True, null=True, verbose_name='Individual Probabilities')),
                ('threshold_used', models.FloatField(blank=True, null=True, verbose_name='Threshold Used')),
                ('gene_plot_path', models.CharField(blank=True, max_length=512, null=True, verbose_name='Gene Plot Path')),
                ('protein_plot_path', models.CharField(blank=True, max_length=512, null=True, verbose_name='Protein Plot Path')),
                ('methylation_plot_path', models.CharField(blank=True, max_length=512, null=True, verbose_name='Methylation Plot Path')),
                ('cnv_plot_path', models.CharField(blank=True, max_length=512, null=True, verbose_name='CNV Plot Path')),
                ('gauge_plot_path', models.CharField(blank=True, max_length=512, null=True, verbose_name='Gauge Plot Path')),
                ('radar_plot_path', models.CharField(blank=True, max_length=512, null=True, verbose_name='Radar Plot Path')),
                ('pdf_report_path', models.CharField(blank=True, max_length=512, null=True, verbose_name='PDF Report Path')),
                ('gemini_interpretation', models.TextField(blank=True, verbose_name='Gemini Interpretation')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('completion_timestamp', models.DateTimeField(blank=True, null=True, verbose_name='Completion Time')),
            ],
            options={
                'verbose_name': 'Multi-omics Result',
                'verbose_name_plural': 'Multi-omics Results',
            },
        ),
    ]
